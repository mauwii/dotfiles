# shellcheck shell=sh

# check if this scritp was sourced
if echo "$-" | grep -q '^[i]*$'; then
    printf "%s must be sourced\n" "$0"
    return 1
else
    [ "${DEBUG}" = "true" ] \
        && printf "loading .aliases\n"
fi

# use exa as modern ls-replacement if available
if command -v exa >/dev/null 2>&1; then
    exa --git >/dev/null 2>&1 && exa_git=true
    # shellcheck disable=SC2139
    alias ls="exa --icons --group-directories-first ${exa_git:+--git} --accessed --modified --created"
elif [ "$(uname -s)" = "Darwin" ]; then
    alias ls='ls -G'
else
    alias ls='ls --color=auto --group-directories-first'
fi

# ls aliases
alias l='ls -a -h'
alias ll='l -l -g'
alias lll='ll -@'
alias lr='ls -R'
alias llr='lr -l'

# replace cat with bat, but disable paging to make it behave like cat
if command -v batcat >/dev/null 2>&1; then
    batbin=$(which batcat)
    ln -s "${batbin}" ~/.local/bin/bat
fi
if command -v bat >/dev/null 2>&1; then
    alias cat="bat --paging=never"
fi

# dotfiles management
if [[ -d "${HOME}/.cfg" ]] && command -v /usr/bin/git >/dev/null 2>&1; then
    alias config="/usr/bin/git --git-dir=${HOME}/.cfg --work-tree=${HOME}"
fi
if command -v config >/dev/null 2>&1; then
    # link all files to ~/.dotfiles to open in code
    function link_dotfiles() {
        cd "${HOME}" || return 1
        for file in $(config ls-tree --full-tree -r --name-only HEAD); do
            # skip .dotfiles folder
            if [[ "${file}" =~ .dotfiles ]]; then
                continue
            fi
            local _path="${HOME}/.dotfiles/${file}"
            mkdir -p "${_path%/*}"
            ln -sf "${HOME}/${file}" "${_path}"
        done
    }
    # open ~/.dotfiles in code
    if command -v code >/dev/null 2>&1; then
        alias dotfiles='link_dotfiles && code ~/.dotfiles'
    fi
fi

# Copy public SSH Key
if command -v pbcopy >/dev/null 2>&1; then
    alias pubkey='pbcopy < ${HOME}/.ssh/id_ed25519.pub'
fi

# dump Brewfile
if [ -n "${HOMEBREW_BUNDLE_FILE}" ]; then
    alias dump-brewfile='brew bundle dump --file="${HOMEBREW_BUNDLE_FILE}" --force'
fi

# install or match Brewfile (match removes everything whats not in the Brewfile)
if [ -f "${HOMEBREW_BUNDLE_FILE}" ]; then
    alias install-brewfile='brew bundle --file="${HOMEBREW_BUNDLE_FILE}"'
    alias match-brewfile='brew bundle --force cleanup --file="${HOMEBREW_BUNDLE_FILE}"'
fi

export DOT_ALIASES=true
